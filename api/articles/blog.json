{"title":"记一次博客更换的全流程(亦从0六步搭建GitHub个人博客)","uid":"0b39c436b7bdec901d53ed031fa8b266","slug":"blog","date":"2023-01-18T05:49:36.000Z","updated":"2023-01-18T11:21:56.581Z","comments":true,"path":"api/articles/blog.json","keywords":null,"cover":"./img/blog.jpg","content":"<h2 id=\"前言：\"><a href=\"#前言：\" class=\"headerlink\" title=\"前言：\"></a>前言：</h2><p>​\t\t写博客是记录学习生活反思和复习的有效途径之一，在写博客的过程中再对知识进行复盘整理，以后也能进行方便有效的回顾。在实习面试时一个优良的博客也一定是加分项，当然从宏观上来讲博客有很多种形式，小到CSND、知乎，中间有博客园，在大到租用云端服务器，自己搭建服务器，都是博客的践行方式。2022年，我的上一个博客和域名都是白嫖github学生包中的微软服务器及namecheap域名商的，如今一年之期就要到了，因为国内对于学生邮箱多年的滥用，许多国外厂商的学生优惠单用中国的学生邮箱是很难通过的，在今年github学生包更难申请了。今年的申请有些悬，我遂提前招呼招呼博客的下家，虽然从本质上来说还是在白嫖github…..</p>\n<h2 id=\"正文：\"><a href=\"#正文：\" class=\"headerlink\" title=\"正文：\"></a>正文：</h2><h3 id=\"1-安装NodeJS：-彼时版本-node-v18-13-0-x64\"><a href=\"#1-安装NodeJS：-彼时版本-node-v18-13-0-x64\" class=\"headerlink\" title=\"1.安装NodeJS：(彼时版本: node-v18.13.0-x64)\"></a>1.安装NodeJS：(彼时版本: node-v18.13.0-x64)</h3><ul>\n<li>官网下载地址：<a href=\"https://nodejs.org/zh-cn/download/\">https://nodejs.org/</a></li>\n<li>下载后一路点击next，<strong>注意选择安装路径</strong>，其他均按照默认即可。</li>\n<li>安装完成后打开cmd窗口，输入命令<code>node -v</code> 查看node版本、在安装node的同时也安装了npm，执行 <code>npm -v</code> 查看npm版本：</li>\n</ul>\n<p><img src=\"https://s2.loli.net/2023/01/16/3POWxj5XL7k2GHs.png\" alt=\"image-20230116193212963\"></p>\n<p>​\t正常显示代表安装完成。</p>\n<h4 id=\"修改全局包路径（非必要）\"><a href=\"#修改全局包路径（非必要）\" class=\"headerlink\" title=\"修改全局包路径（非必要）\"></a>修改全局包路径（非必要）</h4><ul>\n<li><p>下载全局包时，默认保存在C盘下，可通过 <code>npm root -g</code> 命令查看当前路径，但是我们有时候想把全局包放在其他目录下，以免占用C盘空间。</p>\n</li>\n<li><p>在安装目录下创建两个文件夹，<code>node_global</code> 全局包存放，<code>node_cache</code> node缓存</p>\n<p><img src=\"https://s2.loli.net/2023/01/16/RjKvdQtMHiXgaON.png\" alt=\"Snipaste_2023-01-16_10-41\"></p>\n</li>\n<li><p>在cmd命令行中执行如下两条命令： <strong>(注意替换安装文件路径)</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm config set prefix &quot;D:\\server\\NodeJS\\node_global&quot;\nnpm config set cache &quot;D:\\server\\NodeJS\\node_cache&quot;</code></pre>\n</li>\n<li><p>上面步骤里更改了npm全局模块的存放路径和cache路径，但是系统还不知道，所以需要修改环境变量。</p>\n</li>\n</ul>\n<p>​\t打开PATH环境变量：“此电脑&gt;右键&gt;属性&gt;&gt;高级系统设置&gt;&gt;环境变量-<strong>用户变量PATH</strong>” 添加 <code>node_global</code> 的路径（<strong>替换安装文件路径</strong>）</p>\n<p><img src=\"https://s2.loli.net/2023/01/16/f74jzQl1FdUyLeg.png\" alt=\"Snipaste_2023-01-16_10-53\"></p>\n<p>​\t在下方<strong>系统变量</strong>中添加<code>NODE_PATH</code> (<strong>注意前半段替换安装文件路径</strong>)</p>\n<p><img src=\"https://s2.loli.net/2023/01/16/p2vU6g7GoWYxnem.png\" alt=\"Snipaste_2023-01-16_10-57\"></p>\n<h4 id=\"测试安装\"><a href=\"#测试安装\" class=\"headerlink\" title=\"测试安装\"></a>测试安装</h4><ul>\n<li>更换下载源（如果下载速度慢或者无法下载可选）</li>\n</ul>\n<p>​\t输入命令更换淘宝npm镜像源： <code>npm config set registry https://registry.npm.taobao.org</code></p>\n<p>​\t输入命令检查：<code>npm config get registry</code></p>\n<ul>\n<li>测试配置：</li>\n</ul>\n<p>​\t我们安装一个模块测试。以管理员身份运行cmd，输入命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install -g  vue    </code></pre>\n\n<p>​\t能正常安装说明运行成功，对应文件下也会出现对应包：</p>\n<p><img src=\"https://s2.loli.net/2023/01/16/wA3IG6kgu8yMmKs.png\" alt=\"Snipaste_2023-01-16_11-33\"></p>\n<h4 id=\"NodeJS安装完成\"><a href=\"#NodeJS安装完成\" class=\"headerlink\" title=\"NodeJS安装完成\"></a>NodeJS安装完成</h4><h3 id=\"2-安装Git-彼时版本-Git-2-39-0-2-64-bit\"><a href=\"#2-安装Git-彼时版本-Git-2-39-0-2-64-bit\" class=\"headerlink\" title=\"2.安装Git:  (彼时版本: Git-2.39.0.2-64-bit)\"></a>2.安装Git:  (彼时版本: Git-2.39.0.2-64-bit)</h3><ul>\n<li><p>官网下载页面：<a href=\"https://git-scm.com/downloads\">https://git-scm.com/downloads</a></p>\n</li>\n<li><p>选择安装路径</p>\n</li>\n</ul>\n<img src=\"https://s2.loli.net/2023/01/16/i5JSO6kDwCtqKoB.png\" alt=\"202301161908173.png\" style=\"zoom: 80%;\" />\n\n<ul>\n<li><p>按照默认一路next即可，大致每步意思可以参考<a href=\"https://www.cnblogs.com/xueweisuoyong/p/11914045.html\">这篇文章</a></p>\n</li>\n<li><p>安装后也可以命令 <code>git -v</code>查看安装。</p>\n</li>\n</ul>\n<h4 id=\"正常显示代表Gti安装完成\"><a href=\"#正常显示代表Gti安装完成\" class=\"headerlink\" title=\"正常显示代表Gti安装完成\"></a>正常显示代表Gti安装完成</h4><h3 id=\"3-创建GitHub网站域名\"><a href=\"#3-创建GitHub网站域名\" class=\"headerlink\" title=\"3.创建GitHub网站域名\"></a>3.创建GitHub网站域名</h3><ul>\n<li><p>首先一个GitHub账号是必要的，没注册可以自行注册。<a href=\"https://blog.csdn.net/yaorongke/article/details/119086305\">GitHub注册账号</a> （注意不花钱租域名的情况下域名原始为<code>https://&lt;用户名&gt;.github.io/</code> ，用户名不要太随意了）</p>\n</li>\n<li><p>进入GitHub，头像&gt;&gt;<code>Your repositories</code>，进入仓库页面。</p>\n</li>\n<li><p>点击绿色<code>NEW</code> 新建仓库。</p>\n</li>\n<li><p>注意仓库名格式必须为：<code>&lt;用户名&gt;.github.io</code>，这里其实就可以先插入一个html文档了，或者勾选上<code>ADD a README file </code> ,点击<code>Create repository</code> 建库。</p>\n</li>\n<li><p>这里就可以访问<code>https://&lt;用户名&gt;.github.io/</code> 查看简陋的网站了。</p>\n</li>\n</ul>\n<h3 id=\"4-连接GitHub与本地计算机\"><a href=\"#4-连接GitHub与本地计算机\" class=\"headerlink\" title=\"4.连接GitHub与本地计算机\"></a>4.连接GitHub与本地计算机</h3><ul>\n<li>“开始”或“右键”打开 Git Bash命令行，输入如下命令：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git config --global user.name &quot;你的GitHub用户名&quot;\ngit config --global user.email &quot;你的GitHub注册邮箱&quot;</code></pre>\n\n<p>正常运行不会报错\t</p>\n<p>注意：GitHub有功能可以隐藏真实邮箱而采用它生成的虚拟邮箱用于Git操作，可以在settings&gt;&gt;Emails找到。</p>\n<ul>\n<li>然后生成密钥SSH key：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</code></pre>\n\n<p>​\t然后三个回车即可，默认不需要设置密码</p>\n<ul>\n<li>然后继续输入<code>cat ~/.ssh/id_rsa.pub</code>查看刚刚生成的私钥，会出现一大段代码。</li>\n<li>在GitHub打开”头像”&gt;&gt;setting ，点击SSH and GPG keys，新建一个SSH，名字随便。将上一步出现的一大段私钥代码复制到 key 内，然后点击<code>Add SSH key</code> 设置公钥。</li>\n<li>检查连接是否成功——在Git Bash命令行中输入 <code>ssh -T git@github.com</code> 如下图内有你的用户名则说明连接成功。</li>\n</ul>\n<img src=\"https://s2.loli.net/2023/01/16/syWGPNJ4SKdtZ73.png\" alt=\"image-20230116205047655\" style=\"zoom:80%;\" />\n\n<p>​\t这里设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p>\n<h3 id=\"5-安装Hexo-我的博客都是基于Hexo框架，对于静态blog它很方便\"><a href=\"#5-安装Hexo-我的博客都是基于Hexo框架，对于静态blog它很方便\" class=\"headerlink\" title=\"5.安装Hexo (我的博客都是基于Hexo框架，对于静态blog它很方便)\"></a>5.安装Hexo (我的博客都是基于Hexo框架，对于静态blog它很方便)</h3><ul>\n<li><p>这里需要在电脑里方便的地方创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页<strong>都将在</strong>这个文件夹中。</p>\n</li>\n<li><p>进入文件夹，<strong>在此文件</strong>中打开命令行终端或Git命令行输入<code>npm install -g hexo-cli</code>安装Hexo。</p>\n</li>\n</ul>\n<p>​\t安装失败可以用管理员身份运行：右键命令提示符&gt;&gt;打开终端，先用如<code>e:</code>切换盘，在用如<code>cd E:\\blog</code>命令切换文件路径</p>\n<ul>\n<li>接下来仍然在blog文件夹下输入命令 <code>hexo init blog</code>进行博客的初始化。</li>\n</ul>\n<p>​\t这时在文件夹内就会出现对应的博客框架，这些文件构成了整个博客的配置：</p>\n<p><img src=\"https://s2.loli.net/2023/01/16/IV15vMbsqJnUjaD.png\" alt=\"image-20230116215423250\"></p>\n<ul>\n<li>接下来操作cd命令进入到上图的博客目录下，按顺序输入三条命令：</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new test</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo g</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo s</code></pre></blockquote>\n<p>​\t最后出现<code>Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</code></p>\n<ul>\n<li>于是我们访问<a href=\"http://localhost:4000/%E7%9B%B8%E5%BD%93%E4%BA%8E%E7%BD%91%E7%AB%99%E5%9C%A8%E6%9C%AC%E5%9C%B0%E6%89%93%E5%BC%80%EF%BC%8C%E4%BC%9A%E5%87%BA%E7%8E%B0hexo%E7%9A%84%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98landscape%E5%92%8C%E5%88%9A%E5%88%9A%E5%88%9B%E5%BB%BA%E7%9A%84text%E6%96%87%E7%AB%A0\">http://localhost:4000/相当于网站在本地打开，会出现hexo的默认主题landscape和刚刚创建的text文章</a></li>\n</ul>\n<img src=\"https://s2.loli.net/2023/01/18/YD1blnMFoAjCd3B.png\" alt=\"image-20230118102354938\" style=\"zoom:80%;\" />\n\n<ul>\n<li>在这里可以看到博客大体框架已经出现了，你可以对博客进行进一步设置在进行推送，也可以先推送在设置。</li>\n</ul>\n<h3 id=\"6-推送博客\"><a href=\"#6-推送博客\" class=\"headerlink\" title=\"6.推送博客\"></a>6.推送博客</h3><ul>\n<li>将我们的Hexo与GitHub关联起来，打开站点的配置文件<code>_config.yml</code></li>\n</ul>\n<p><img src=\"https://s2.loli.net/2023/01/17/igoc3K6d1Er8ZWH.png\" alt=\"image-20230117095448473\"></p>\n<ul>\n<li>最下面一行找到 <code># Deployment</code> 栏，如下填入之前在<strong>GitHub上创建仓库的完整路径</strong>：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">type: git\nrepo: https:&#x2F;&#x2F;github.com&#x2F;&lt;用户名&gt;&#x2F;&lt;用户名&gt;.github.io.git\nbranch: main</code></pre>\n\n<p>​\t保存配置文件</p>\n<ul>\n<li><p>在当前博客根目录下打开再次命令行，输入<code>npm install hexo-deployer-git --save</code> 安装Git部署插件</p>\n</li>\n<li><p>在按顺序输入三条命令：</p>\n<blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo clean</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo g</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo s</code></pre></blockquote>\n</li>\n</ul>\n<p>​\t中途可能会出现Github认证的情况，正常认证即可：</p>\n<img src=\"https://s2.loli.net/2023/01/17/aRpoyY2AqfeNGsz.png\" alt=\"Snipaste_2023-01-17_10-22\" style=\"zoom:67%;\" />\n\n<ul>\n<li>无误后就可以访问<code>https://&lt;用户名&gt;.github.io/</code>查看网站了。</li>\n</ul>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>​\t到这里一个基于Hexo+GitHub pages的博客就基本创建完成了，hexo有着丰富和多样的主题，支持对网站进行大限度的自定义，可以根据个人喜好切换想要的主题。在进行操作的过程中，出现问题是很正常的，包括我在边做边写这篇博客时也出现过问题。在我看来自学本身就是一个：<strong>发现&#x2F;出现问题&gt;&gt;查找答案&gt;直到&gt;解决问题</strong> 的过程，在或查找资料或询问别人中拓宽自己的知识面，学到新的知识。</p>\n<p><a href=\"https://hexo.io/zh-cn/docs/\">Hexo官方文档</a> 包含了所有配置及命令，是自定义网站必须要看的。</p>\n","feature":true,"text":"前言：​ 写博客是记录学习生活反思和复习的有效途径之一，在写博客的过程中再对知识进行复盘整理，以后也能进行方便有效的回顾。在实习面试时一个优良的博客也一定是加分项，当然从宏观上来讲博客有很多种形式，小到CSND、知乎，中间有博客园，在大到租用云端服务器，自己搭建服务器，都是博客的...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"生活","slug":"生活","count":2,"path":"api/categories/生活.json"}],"tags":[{"name":"blog","slug":"blog","count":1,"path":"api/tags/blog.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80%EF%BC%9A\"><span class=\"toc-text\">前言：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E6%96%87%EF%BC%9A\"><span class=\"toc-text\">正文：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%AE%89%E8%A3%85NodeJS%EF%BC%9A-%E5%BD%BC%E6%97%B6%E7%89%88%E6%9C%AC-node-v18-13-0-x64\"><span class=\"toc-text\">1.安装NodeJS：(彼时版本: node-v18.13.0-x64)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E5%85%A8%E5%B1%80%E5%8C%85%E8%B7%AF%E5%BE%84%EF%BC%88%E9%9D%9E%E5%BF%85%E8%A6%81%EF%BC%89\"><span class=\"toc-text\">修改全局包路径（非必要）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">测试安装</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#NodeJS%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90\"><span class=\"toc-text\">NodeJS安装完成</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%AE%89%E8%A3%85Git-%E5%BD%BC%E6%97%B6%E7%89%88%E6%9C%AC-Git-2-39-0-2-64-bit\"><span class=\"toc-text\">2.安装Git:  (彼时版本: Git-2.39.0.2-64-bit)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA%E4%BB%A3%E8%A1%A8Gti%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90\"><span class=\"toc-text\">正常显示代表Gti安装完成</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%88%9B%E5%BB%BAGitHub%E7%BD%91%E7%AB%99%E5%9F%9F%E5%90%8D\"><span class=\"toc-text\">3.创建GitHub网站域名</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E8%BF%9E%E6%8E%A5GitHub%E4%B8%8E%E6%9C%AC%E5%9C%B0%E8%AE%A1%E7%AE%97%E6%9C%BA\"><span class=\"toc-text\">4.连接GitHub与本地计算机</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E5%AE%89%E8%A3%85Hexo-%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E9%83%BD%E6%98%AF%E5%9F%BA%E4%BA%8EHexo%E6%A1%86%E6%9E%B6%EF%BC%8C%E5%AF%B9%E4%BA%8E%E9%9D%99%E6%80%81blog%E5%AE%83%E5%BE%88%E6%96%B9%E4%BE%BF\"><span class=\"toc-text\">5.安装Hexo (我的博客都是基于Hexo框架，对于静态blog它很方便)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E6%8E%A8%E9%80%81%E5%8D%9A%E5%AE%A2\"><span class=\"toc-text\">6.推送博客</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%90%8E%E8%AE%B0\"><span class=\"toc-text\">后记</span></a></li></ol>","author":{"name":"rui_yuan","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"在校大学生.web安全菜鸟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"markdown text","uid":"91cab77c54412396887e1e687a7b82ec","slug":"测试文件","date":"2023-01-17T10:49:36.000Z","updated":"2023-01-18T09:50:51.288Z","comments":true,"path":"api/articles/测试文件.json","keywords":null,"cover":"./img/text.jpg","text":"一级标题二级标题三级标题四级标题五级标题六级标题123456 /post/hello-world.html 测试文章链接 &#x2F;&#x2F;上一条无法内部引用，且切换图片显示异常 hexo 引用文章 斜体文本 斜体文本 粗体文本 粗体文本 粗斜体文本 粗斜体文本 无序列表 ...","link":"","photos":[],"count_time":{"symbolsCount":589,"symbolsTime":"1 mins."},"categories":[{"name":"生活","slug":"生活","count":2,"path":"api/categories/生活.json"}],"tags":[{"name":"text","slug":"text","count":1,"path":"api/tags/text.json"}],"author":{"name":"rui_yuan","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"在校大学生.web安全菜鸟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}